version: "3.8"

services:
  caddy:
    container_name: caddy
    image: caddy:2.7
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    volumes:
      - caddy_data:/data
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
    networks:
      - caddy

  postgres:
    container_name: postgres
    image: postgis/postgis:${POSTGIS_VERSION_TAG}
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER} -d postgres || exit 1"
        ]
      interval: 15s
      timeout: 10s
      retries: 3
    networks:
      - caddy

  pgadmin4:
    container_name: pgadmin4
    image: dpage/pgadmin4:${PGADMIN_VERSION_TAG}
    restart: always
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "80"
    networks:
      - caddy

  syncthing:
    container_name: syncthing
    image: syncthing/syncthing:latest
    restart: always
    hostname: localhost
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - syncthing_data:/var/syncthing
    ports:
      - "8384" # Web UI
      - "22000:22000/tcp" # TCP file transfers
      - "22000:22000/udp" # QUIC file transfers
      - "21027:21027/udp" # Receive local discovery broadcasts
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -f http://syncthing:8384/rest/noauth/health || exit 1"
        ]
      interval: 15s
      timeout: 10s
      retries: 3
    networks:
      - caddy

  qgis-server:
    container_name: qgis-server
    image: camptocamp/qgis-server:latest
    restart: always
    ports:
      - "80"
    volumes:
      - syncthing_data:/var/syncthing
    environment:
      - QGIS_SERVER_LANDING_PAGE_PROJECTS_DIRECTORIES=/var/syncthing/Sync
    depends_on:
      syncthing:
        condition: service_healthy
      postgres:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://qgis-server:80 || exit 1" ]
      interval: 15s
      timeout: 10s
      retries: 3
    networks:
      - caddy

volumes:
  postgres_data:
  pgadmin_data:
  syncthing_data:
  caddy_data:


networks:
  caddy:
    name: caddy
